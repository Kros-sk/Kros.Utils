trigger:
  batch: true
  tags:
    include:
    - v*.*

pool:
  vmImage: 'windows-2019'

variables:
  - group: Nuget
  - name: buildConfiguration
    value: 'Release'
  - name: projectName
    value: 'Kros.Utils'

steps:
  - task: DotNetCoreCLI@2
    displayName: 'Nuget restore'
    inputs:
      command: 'restore'
      projects: '**/$(projectName).csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: build
      projects: '**/$(projectName).csproj'
      arguments: '--configuration $(BuildConfiguration) --no-restore'

  # - task: DotNetCoreCLI@2
  #   displayName: 'Tests'
  #   inputs:
  #     command: test
  #     projects: '**/$(projectName).UnitTests.csproj'

  # - task: DotNetCoreCLI@2
  #   displayName: 'Publish'
  #   inputs:
  #     command: publish
  #     projects: '**/$(projectName).csproj'
  #     arguments: --configuration $(BuildConfiguration) --no-restore --output $(Build.ArtifactStagingDirectory) --framework netstandard2.0
  #     publishWebProjects: false
  #     zipAfterPublish: True

  - task: CopyFiles@2
    displayName: 'Copy package files to staging directory'
    inputs:
      Contents: '**/$(projectName)*.nupkg'
      TargetFolder: '$(build.artifactStagingDirectory)'
      FlattenFolders: true

  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     PathtoPublish: '$(build.artifactStagingDirectory)'
  #   condition: succeededOrFailed()

  # - task: NuGetCommand@2
  #   displayName: 'Pack'
  #   inputs:
  #     command: pack
  #     configuration: $(BuildConfiguration)
  #     packagesToPack: '**/$(projectName).csproj'

  - task: NuGetCommand@2
    displayName: 'Nuget push to $(nuget.feed)'
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: $(nuget.feed)
      packagesToPush: '$(build.artifactStagingDirectory)/**/*.nupkg'
